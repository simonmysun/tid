#!/usr/bin/env node

var program = require('commander');
var portfinder = require('portfinder');
var open = require('open');
var fs = require('fs');
var path = require('path');
var server = require('./../src/backend/server');

program.version('0.0.2')
    .description('Take It Down - yet another browser based "editor"')
    .option('-B, --no-browser', 'do not start browser after the service started. defaults to true')
    .option('-C, --chdir [path]', 'change the working directory, defaults to current directory')
    .option('-c, --config [path]', 'set config path. defaults to ./deploy.conf')
    .option('-P, --port [n]', 'specify a port to use, by default the port 3000 will be used')
    .option('-w, --watch', 'watch file changes and automatically refresh')
    .parse(process.argv);

console.log('Initializing... ');

if(program.chdir && !fs.existsSync(program.chdir)) {
    console.error('Illegal path: "' + program.chdir + '" does not exists. ');
    process.exit(1);
}

if(program.chdir && !fs.lstatSync(program.chdir).isDirectory()) {
    console.error('Illegal path: Please input a path of a directory rather than files. ');
    process.exit(1);
}

if(program.port && !(/^\+?(0|[1-9]\d*)$/.test(program.port) && parseInt(program.port, 10) > 0 && parseInt(program.port, 10) < 65535)) {
    console.error('Illegal port: Please input a port number between 0 and 65535(root access required if port number less than 1024).');
    process.exit(1);
}

portfinder.basePort = parseInt(program.port, 10) || 3000;
portfinder.getPort(function(err, port) {
    if(program.port && port !== portfinder.basePort) {
        console.info('Port ' + program.port + ' is already in use. Using ' + port + ' instead. ');
    }
    var options = {
        targetPath: path.resolve(program.chdir || '.') || process.cwd(),
        port: port || 3000
    };

    server.start(options, function() {
        if(program.browser) {
            console.log('Starting browser');
            open(`http://localhost:${options.port}/`);
        }
    });
});
